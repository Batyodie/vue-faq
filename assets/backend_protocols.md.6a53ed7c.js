import{_ as e,o as t,c as a,X as r}from"./chunks/framework.049a4bb5.js";const h=JSON.parse('{"title":"Протоколы. To REST или не REST?","description":"","frontmatter":{},"headers":[],"relativePath":"backend/protocols.md","filePath":"backend/protocols.md"}'),o={name:"backend/protocols.md"},s=r('<h1 id="протоколы-to-rest-или-не-rest" tabindex="-1">Протоколы. To REST или не REST? <a class="header-anchor" href="#протоколы-to-rest-или-не-rest" aria-label="Permalink to &quot;Протоколы. To REST или не REST?&quot;">​</a></h1><details class="details custom-block"><summary>REST, WS, JSON-RPC</summary><p>Для новичка, конечно, удобнее начинать с REST - запросы на сервер абы как.</p><p>Для более опытных, особенно фулстеков, предлагаю взглянуть на JSON-RPC - после этого общение с бэком уже никогда не будет прежним.</p><p>Вот две мои статьи на эту тему - <a href="https://habr.com/ru/articles/709362/" target="_blank" rel="noreferrer">Популяризация JSON-RPC (часть 1)</a> и <a href="https://habr.com/ru/articles/710652/" target="_blank" rel="noreferrer">Популяризация JSON-RPC (часть 2)</a></p><p>При использовании JSON-RPC переход на WS или другие транспортные протоколы не вызовет никаких трудностей.</p></details><details class="details custom-block"><summary>Как организовать реконнект WebSocket соединения на фронте?</summary><p>Нужна шина, или event bus, которая будет работать как прокси для приходящих сообщений.</p><p>Можно использовать <a href="https://github.com/developit/mitt" target="_blank" rel="noreferrer">mitt</a>.</p></details>',3),c=[s];function l(n,p,_,i,d,m){return t(),a("div",null,c)}const u=e(o,[["render",l]]);export{h as __pageData,u as default};

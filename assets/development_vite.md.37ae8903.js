import{_ as e,o as t,c as a,X as c}from"./chunks/framework.049a4bb5.js";const v=JSON.parse('{"title":"Сборщики","description":"","frontmatter":{},"headers":[],"relativePath":"development/vite.md","filePath":"development/vite.md"}'),o={name:"development/vite.md"},s=c('<h1 id="сборщики" tabindex="-1">Сборщики <a class="header-anchor" href="#сборщики" aria-label="Permalink to &quot;Сборщики&quot;">​</a></h1><details class="details custom-block"><summary>Сборка приложения</summary><p>Чтобы собрать Vue проект в файлы, понятные браузеру, нужен сборщик. Самые популярные - <code>Vite</code> и <code>Webpack</code></p><p>Vite более новый и использует современные технологии, включая <code>esbuild</code> для <code>dev</code> сборок для транспиляции TypeScript в JavaScript, который в 20~30 раз быстрее чем обычный tsc, что делает HMR в десятки раз быстрей, чем на Webpack. Для билда JavaScript для <code>production</code> используется сборщик <code>Rollup</code>.</p><p>Нужно учитывать, что каждый сборщик собирает ресурсы приложения (иконки, SVG и пр.) по-своему, используя свои плагины, и требует в этом настройки.</p><p>Каждый сборщик позволяет расширять свои возможности кастомными плагинами.</p></details><details class="details custom-block"><summary>Vite или Webpack?</summary><p>Vite.</p><p>Если вам понадобится Webpack, вы будете знать это сами.</p></details>',3),d=[s];function i(p,r,l,_,n,m){return t(),a("div",null,d)}const h=e(o,[["render",i]]);export{v as __pageData,h as default};

import{_ as t,o as a,c as r,k as e,a as c}from"./chunks/framework.049a4bb5.js";const k=JSON.parse('{"title":"Архитектура фронтэнд приложений","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/architecture.md","filePath":"frontend/architecture.md"}'),s={name:"frontend/architecture.md"},n=e("h1",{id:"архитектура-фронтэнд-приложении",tabindex:"-1"},[c("Архитектура фронтэнд приложений "),e("a",{class:"header-anchor",href:"#архитектура-фронтэнд-приложении","aria-label":'Permalink to "Архитектура фронтэнд приложений"'},"​")],-1),o=e("details",{class:"details custom-block"},[e("summary",null,"ООП на фронте"),e("p",null,"Многие приходя из разработки на объектно-ориентированных языках пытаются использовать концепции ООП и на фронте и программировать с классами, наследованием, полиморфизмом и прочим."),e("p",null,"Это ошибка. Основные вычисления на фронте связаны с UI - показ данных, обработка взаимодействия с пользователем. Системы классов и микросервисов на них просто не нужны. Конечно, можно создать базовую кнопку, обернуть ее в два кастомных компонента и считать это наследованием, но в коде этого не получается. Поэтому надо учиться мыслить другими категориями - компоненты, композаблы, js модули. И использовать свою мощь JavaScript-a, а не пытаться натянуть его на ООП."),e("p",null,'Композаблы, кстати, неплохая аналогия объекта с глобальным ("статичным") и локальным ("объектным") состоянием.')],-1),l=[n,o];function i(d,_,h,p,u,m){return a(),r("div",null,l)}const x=t(s,[["render",i]]);export{k as __pageData,x as default};
